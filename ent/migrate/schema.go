// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// PricesColumns holds the columns for the "prices" table.
	PricesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "price", Type: field.TypeFloat64},
		{Name: "recorded_at", Type: field.TypeTime},
		{Name: "product_id", Type: field.TypeInt},
		{Name: "store_id", Type: field.TypeInt},
	}
	// PricesTable holds the schema information for the "prices" table.
	PricesTable = &schema.Table{
		Name:       "prices",
		Columns:    PricesColumns,
		PrimaryKey: []*schema.Column{PricesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "prices_products_prices",
				Columns:    []*schema.Column{PricesColumns[3]},
				RefColumns: []*schema.Column{ProductsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "prices_stores_prices",
				Columns:    []*schema.Column{PricesColumns[4]},
				RefColumns: []*schema.Column{StoresColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// ProductsColumns holds the columns for the "products" table.
	ProductsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString},
		{Name: "category", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "store_products", Type: field.TypeInt, Nullable: true},
	}
	// ProductsTable holds the schema information for the "products" table.
	ProductsTable = &schema.Table{
		Name:       "products",
		Columns:    ProductsColumns,
		PrimaryKey: []*schema.Column{ProductsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "products_stores_products",
				Columns:    []*schema.Column{ProductsColumns[5]},
				RefColumns: []*schema.Column{StoresColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ReviewsColumns holds the columns for the "reviews" table.
	ReviewsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "rating", Type: field.TypeFloat64},
		{Name: "comment", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "store_id", Type: field.TypeInt},
		{Name: "user_id", Type: field.TypeInt},
	}
	// ReviewsTable holds the schema information for the "reviews" table.
	ReviewsTable = &schema.Table{
		Name:       "reviews",
		Columns:    ReviewsColumns,
		PrimaryKey: []*schema.Column{ReviewsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "reviews_stores_reviews",
				Columns:    []*schema.Column{ReviewsColumns[4]},
				RefColumns: []*schema.Column{StoresColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "reviews_users_reviews",
				Columns:    []*schema.Column{ReviewsColumns[5]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// StoresColumns holds the columns for the "stores" table.
	StoresColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "location", Type: field.TypeString},
		{Name: "city", Type: field.TypeString},
		{Name: "country", Type: field.TypeString},
		{Name: "zipcode", Type: field.TypeString, Nullable: true},
		{Name: "photo", Type: field.TypeString, Nullable: true},
		{Name: "latitude", Type: field.TypeFloat64, Nullable: true},
		{Name: "longitude", Type: field.TypeFloat64, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "product_stores", Type: field.TypeInt, Nullable: true},
	}
	// StoresTable holds the schema information for the "stores" table.
	StoresTable = &schema.Table{
		Name:       "stores",
		Columns:    StoresColumns,
		PrimaryKey: []*schema.Column{StoresColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "stores_products_stores",
				Columns:    []*schema.Column{StoresColumns[10]},
				RefColumns: []*schema.Column{ProductsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "email", Type: field.TypeString},
		{Name: "password", Type: field.TypeString},
		{Name: "phone", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		PricesTable,
		ProductsTable,
		ReviewsTable,
		StoresTable,
		UsersTable,
	}
)

func init() {
	PricesTable.ForeignKeys[0].RefTable = ProductsTable
	PricesTable.ForeignKeys[1].RefTable = StoresTable
	ProductsTable.ForeignKeys[0].RefTable = StoresTable
	ReviewsTable.ForeignKeys[0].RefTable = StoresTable
	ReviewsTable.ForeignKeys[1].RefTable = UsersTable
	StoresTable.ForeignKeys[0].RefTable = ProductsTable
}
